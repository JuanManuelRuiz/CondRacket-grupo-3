(display "Realizado por:")
(newline)
(display "Juan Manuel Ruiz Sánchez")
(newline)
(display "Miguel Ángel Buitrago")
(newline)
(display "Miguel Ángel Cerón")
(newline)


(define (principal)
  (display "ingrese el punto que quiere visualizar: ")
  
  (define (mayor_2 a b)
    (cond ((> a b) a)
          (else b)))

  (define (ascendente a b)
    (cond ((< a b) (display a)(newline)(display b))
          (else (display b)(newline) (display a))))

  (define (numero a)
    (cond ((> a 0) 'positivo)
          (else (* a a))))

  (define (descuento a)
    (cond ((>= a 100000) (* a 0.8))
          (else a)))

  (define (camisas a b)
    (cond ((> a 3) (* b 0.8))
          (else (* b 0.9))))

(define(edad a)
  (cond ((< a 10 ) "3")
        ((and(< a 18)(> a 10)) "2")
         (else "1")
         )
        )
  

(define (principal11)
  (begin
    (display " ingrese la edad de la persona:  ")
    (newline)
    (define a(read))
    (display "el identificador de la persona es: ")
    (edad a)
    )
  )

(define (seguro a )
  (cond ((< a 500000) (+ a (* a 0.03)))
        (else (+ a (* a 0.02)))
        )
  )
(define (principal12)
  (begin
    (display "ingrese el precio del seguro: ")
    (newline)
    (define a (read))
    (display " el precio a pagar es: ")
    (display (seguro a))
    )
  )

(define (liquidacion matricula patrimonio estrato)
(cond (( and(> patrimonio 2000000)(> estrato 3)) (+ matricula (* matricula 0.03)))
      (else matricula)
      )
  )

(define (principal13)
  (begin
    (define matricula 500000)
    (display "ingrese el patrimonio: ")
    (define patrimonio(read))
    (display "ingrese el estrato: ")
    (define estrato(read))
    (newline)
    (display "nombre:  ")
    (define nombre(read))
    
    (newline)
    (display "pago de la matricula: ")
    (display (liquidacion matricula patrimonio estrato))
    )
  )

(define (pago_servicios pago estrato)
  (cond((<= estrato 2) (+ pago (* pago 0.05)))
       ((and(> estrato 2)(<= estrato 4)) (+ pago (* pago 0.1)))
       (else (+ pago (* pago 0.20)))
       )
  )
(define(principal14)
  (begin
    (define pago 80000)
    (display " nombre: ")
    (define nombre(read))
    
    (newline)
    (display " direccion:  ")
    (define direccion(read))
    (newline)
    (display "estrato: ")
    (define estrato (read))
    
    (newline)
    (display " el total a pagar es:  ")
    (display (pago_servicios pago estrato))
    )
  )

  (define(precio_c marca valor iva)
  (cond((>= valor 1000000) (+ (- valor (* valor 0.1)) (* valor iva)))
       ((= marca iva) (+ (- valor (* valor 0.05)) (* valor iva)))
       (else (+ valor (* valor iva)))
       )
  )
(define (principal15)
  (begin
    (define iva 0.16)
    (display "ingrese la marca del computador: ")
    (define marca(read))
    (newline)
    (display " ingrese el valor: ")
    (define valor(read))
    (newline)
    (display " el valor del computador con iva es: ")
    (display(precio_c marca valor iva))
    )
  )
  
(define(horas h n)
  (cond((<= h 48)(* h n))
       ((<= h 56)(* h(* n 2)))
       ((> 56) (+(* 48 n)(* 8 (* n 2))(*(- h 56)(* n 3))))))

(define(desc p v)
  (cond((<= p 2)(* p v))
       ((<= p 5)(*(* v 0.95)p))
       ((<= p 10)(*(* v 0.85)p))
       ((>= p 11)(*(* v 0.82)p))))

  (define (util a s)
  (cond((< a 1)(* s 0.05))
       ((< a 2)(* s 0.07))
       ((< a 5)(* s 0.1))
       ((< a 10)(* s 0.15))
       ((>= a 10)(* s 0.2))))

 (define(llantas l)
  (cond((< l 5)(* l 30000))
       ((< l 10)(* l 25000))
       ((>= l 10)(* l 20000))))

  (define(valor a s t n v)
  (cond((and(= s 2)(= t 1)(>= a 35)(<= a 45)) (* v 3))
       ((and(= n 1)(= t 2)(< a 30)) (/ v 3))
       ((and(= s 2)(= n 3)(>= a 55)) (- v 50000))
       (else v)
       ))
  
  (define (principal1)
    (display "ingrese el valor del primer numero: ")
    (define a (read))
    (display "ingrese el valor del segundo numero: ")
    (define b (read))
    (display "el numero mayor es: ")
    (mayor_2 a b))

  (define (principal2)
    (display "ingrese el valor del primer numero: ")
    (define a (read))
    (display "ingrese el valor del segundo numero: ")
    (define b (read))
    (display "el orden ascendente es: ")
    (ascendente a b))

  (define (principal3)
    (display "ingrese el valor del numero: ")
    (define a (read))
    (display "el numero es: ")
    (numero a))

  (define (principal4)
    (display "ingrese el valor de la compra: ")
    (define a (read))
    (display "el total a pagar es: ")
    (descuento a))

  (define (principal5)
    (display "ingrese la cantidad de camisas: ")
    (define a (read))
    (display "ingrese el precio de las camisas: ")
    (define b (read))
    (display "el total a pagar es: ")  
    (camisas a b))

  (define(principal16)
  (display"Horas trabajadas: ")
  (define h(read))
  (display"Precio hora normal: ")
  (define n(read))
  #\newline
  (display"El sueldo será de: $")
  (horas h n)
  )

  (define(principal17)
  (display"Peras compradas: ")
  (define p(read))
  (display"Precio peras: ")
  (define v(read))
  #\newline
  (display"El total es de: $")
  (desc p v)
  )

  (define(principal18)
  (display"Años de antiguedad: ")
  (define a(read))
  (display"Salario: ")
  (define s(read))
  #\newline
  (display"Utilidades: $")
  (util a s)
  )

  (define(principal19)
  (display"No. de llantas: ")
  (define l(read))
  #\newline
  (llantas l)
  )

(define(principal20)
  (display"Edad: ")
  (define a(read))
  (display"Sexo: ( 1 hombre, 2 mujer) ")
  (define s(read))
  (display"Tipo: (1 alto, 2 medio, 3 bajo)")
  (define t(read))
  (display"Nacionalidad: (1 latino. 2 alemán, 3 hindú, 4 colombiano)")
  (define n(read))
  (display"Valor: ")
  (define v(read))
  #\newline
  (display"El valor será de: ")
  (valor a s t n v)
  )
  
  (define (taller a)
    (cond ((= a 1) (principal1))
          ((cond ((= a 2) (principal2))
                 ((cond ((= a 3) (principal3))
                        ((cond ((= a 4) (principal4))
                               ((cond ((= a 5) (principal5))
                                      ((cond ((= a 6) (principal6))
                                             ((cond ((= a 7) (principal7))
                                                    ((cond ((= a 8) (principal8))
                                                           ((cond ((= a 9) (principal9))
                                                                  ((cond ((= a 10) (principal10))
                                                                         ((cond ((= a 11) (principal11))
                                                                                ((cond ((= a 12) (principal12))
                                                                                       ((cond ((= a 13) (principal13))
                                                                                              ((cond ((= a 14) (principal14))
                                                                                                     ((cond ((= a 15) (principal15))
                                                                                                            ((cond ((= a 16) (principal16))
                                                                                                                   ((cond ((= a 17) (principal17))
                                                                                                                          ((cond ((= a 18) (principal18))
                                                                                                                                 ((cond ((= a 19) (principal19))
                                                                                                                                        ((cond ((= a 20) (principal20))                      
                                                                                                                                               (else (display "numero no valido"))
                                                                                                                                               ))))))))))))))))))))))))))))))))))))))))
(taller (read)))
(principal)

